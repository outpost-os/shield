name: Shield Doc deployment to outpostpedia

on:
  push:
    branches:
    - main

# using /home/build as home, as buildbot is using user build. Cache is still in /cache
# This allows the usage of automated ssh key installation step

jobs:
  build_doc:
    defaults:
      run:
        shell: bash
    runs-on: self-hosted
    container:
      image: 'mesonbuild/ubuntu-rolling'
    steps:
      - name: Clear GITHUB_HOME at job start
        shell: bash
        run: |
          find $HOME -mindepth 1 -maxdepth 1 -not -name '.' -exec rm -rf {} \;
      - name: Setup git
        uses: embedded-devops/action-setup-git@main
        with:
          ssh_key: ${{ secrets.GHE_SSH_KEY }}
          ssh_known_hosts: ${{ secrets.GHE_HOST_KEY }}
      - name: Setup Meson
        uses: embedded-devops/action-setup-meson@main
        with:
          token: ${{ secrets.GHE_CI_TOKEN }}
          crossfiles_git: 'outpost/meson-cross-files'
          crossfiles_ref: 'main'
      - name: install prerequisites pkg
        uses: embedded-devops/action-install-pkg@v2.0
        with:
          packages: 'dtc|device-tree-compiler,libssh2-1|libssh2,curl,lld'
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
      - name: Install (c)bindgen
        run: |
          cargo install cbindgen bindgen-cli --locked
      - name: Set pypi credentials
        uses: embedded-devops/action-pypi@main
        with:
          pypi_server_url: 'https://nexus.orange.ledgerlabs.net/repository/kulos-pypi'
          pypi_server_need_authentication: true
          pypi_server_login: ${{ secrets.NEXUS_CI_RO_USER }}
          pypi_server_password: ${{ secrets.NEXUS_CI_RO_PASSWORD }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: deploy local deps
        run: |
          pip install -r requirements.txt
      - name: install dtc pkg
        uses: embedded-devops/action-install-pkg@v2.0
        with:
          packages: 'dtc|device-tree-compiler,libssh2-1|libssh2,curl,lld'
      - name: Meson Doc
        uses: embedded-devops/action-meson@main
        with:
          actions: '["prefetch", "setup"]'
          options: '-Dwith_doc=true -Dconfig=configs/defconfig'
      - name: Meson postcheck
        if: failure()
        run: |
          cat builddir/meson-logs/meson-log.txt
          cat builddir/meson-logs/testlog.txt
      - name: build html documentation
        run: |
          ninja -C builddir doc/shield
      - name: Caching generated html doc
        uses: actions/cache/save@v3
        with:
          path: builddir/doc/shield
          key: doc-shield-html-${{ github.run_id }}-${{ github.run_number }}

  deploy_to_outpostpedia:
    needs: build_doc
    defaults:
      run:
        shell: bash
    runs-on: self-hosted
    container:
      image: 'mesonbuild/ubuntu-rolling'
    steps:
      - name: Setup git
        uses: embedded-devops/action-setup-git@main
        with:
          ssh_key: ${{ secrets.GHE_SSH_KEY }}
          ssh_known_hosts: ${{ secrets.GHE_HOST_KEY }}
      - name: get outpost web
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.OUTPOSTPEDIA_WEBSITE }}
          ref: 'main'
          token:  ${{ secrets.GHE_CI_TOKEN }}
      - name: get back doc cache
        id: cache-doc
        uses: actions/cache/restore@v3
        with:
          path: builddir/doc/shield
          key: doc-shield-html-${{ github.run_id }}-${{ github.run_number }}
      - if: ${{ steps.cache-doc.outputs.cache-hit == 'true' }}
        name: remove previous concept content
        run: |
          rm -rf components/shield
          mkdir -p components/
          mv builddir/doc/shield components/shield
      - if: ${{ steps.cache-doc.outputs.cache-hit == 'true' }}
        name: commit new shield doc
        run: |
          git add components/shield
          git commit -am "CI: update shield component"
          git push origin main
